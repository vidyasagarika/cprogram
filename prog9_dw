from sklearn.datasets import load_iris
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt

# Load the Iris dataset
iris = load_iris()
X, y = iris.data, iris.target

# Split the dataset into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Initialize and train the Decision Tree Classifier
classifier = DecisionTreeClassifier(random_state=42)
classifier.fit(X_train, y_train)

# Visualize the Decision Tree
plt.figure(figsize=(12,8))
plot_tree(classifier, feature_names=iris.feature_names, class_names=iris.target_names, filled=True)
plt.show()

# Use the model to predict and classify a new data point
new_data_point = [[5.1, 3.5, 1.4, 0.2]]
predicted_class = classifier.predict(new_data_point)
predicted_probabilities = classifier.predict_proba(new_data_point)

print("Predicted Class:", predicted_class)
print("Predicted Probabilities:", predicted_probabilities)
